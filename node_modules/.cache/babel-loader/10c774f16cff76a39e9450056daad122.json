{"ast":null,"code":"import axios from \"axios\";\nexport const jobData = () => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"https://jabama-devjobs-api.vercel.app/api/v1/jobs/\");\n    const jobresult = data.result;\n    const jobdata = jobresult.items; // localStorage.setItem(\"products\", JSON.stringify(data));\n\n    dispatch({\n      type: \"get_job_succes\",\n      payload: [...jobdata]\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: \"get_job_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const searchData = (search, search1, search2) => async (dispatch, getState) => {\n  const help = getState().job.product;\n  console.log(getState()); // const x=help.length\n  // const help1=[]\n  // for(let i=0;i<x;i++){\n  //     var y = help[i].contract\n  //     console.log(y)\n  //     {y != \"Full Time\" && help.splice(i,1)} \n  //     };\n  //     console.log([...help])\n\n  console.log(search, search1, search2);\n  const filtered = help.filter(obj => {\n    return obj.contract === 'Full Time';\n  });\n  console.log(filtered);\n  const filtered1 = help.filter(obj => {\n    return obj.includes(search2);\n  });\n  console.log(filtered1);\n  const filtered2 = filtered1.filter(obj => {\n    return obj.position == search;\n  });\n  console.log(filtered2); // help.splice(index,1)\n  //   dispatch({ type: \"deleteItem\", payload: [...help]\n  // const contract=[]\n  // const fullTime=[]\n  // help.map((item,index)=>{return(  \n  //   contract.push(item.contract)  \n  //   ) })\n  //   console.log(contract)\n  // console.log(search,search1,search2)\n  // {search2==true ? fullTime==contract.includes(\"Full Time\"): console.log(contract) }\n  // console.log(fullTime)\n\n  dispatch({\n    type: \"search\",\n    payload: filtered2\n  });\n}; // export const eachproductData = (params) => async (dispatch, getState) => {\n//   try {\n//     const {data}  = await axios.get(\n//       `http://5.161.141.215:5000/api/products/${params.id}`\n//     );\n//     dispatch({ type: \"get_eachproduct_succes\", payload: data});\n//   } \n//   catch (error) {\n//     dispatch({ type: \"get_eachproduct_failed\", payload: error.message });\n//   }\n// };\n// export const newUser =()  => async (dispatch, getState) => {\n//   try {\n//     const {data}  =await axios.post(\n//     'https://62.204.61.253:9392/api/v1/user/create',{full_name:\"ali\",username:\"admin\",\"password\":\"123456\"}\n//     )\n//     localStorage.setItem(\"users\", JSON.stringify(data));\n//     dispatch({ type: \"post_newuser_succes\", payload: data});\n//   } \n//   catch (error) {\n//     dispatch({ type: \"post_newuser_failed\", payload: error.message });\n//   }\n// };\n// export const loginUser =()  => async (dispatch, getState) => {\n//   try {\n//     const {data}  =await axios.post(\n//     \"https://62.204.61.253:9392/api/v1/login/1\",{\"username\":\"admin\",\"password\":\"123456\"}\n//     )\n//     localStorage.setItem(\"users\", JSON.stringify(data));\n//     dispatch({ type: \"post_loginuser_succes\", payload: data});\n//   } \n//   catch (error) {\n//     dispatch({ type: \"post_loginuser_failed\", payload: error.message });\n//   }\n// };\n// export const userData =()  => async (dispatch, getState) => {\n//   const token= getState().user.user.token\n//    try {\n//     const {data}  =await axios.get(\n//        `http://5.161.141.215:5000/api/users/profile`,{\n//        headers:{\n//          'Content-Type' :\"application/json\",\n//          Authorization:`Bearer ${token}`\n//        }}\n//     )\n//     localStorage.setItem(\"users\", JSON.stringify(data));\n//     dispatch({ type: \"get_userdata_succes\", payload: data});\n//   } \n//   catch (error) {\n//     dispatch({ type: \"get_userdata_failed\", payload: error.message });\n//   }\n// };\n// export const changeuserData =(password)  => async (dispatch, getState) => {\n//   const token= getState().user.user.token\n//   const name= getState().user.user.name\n//   const email=getState().user.user.email\n//   try {\n//     const {data}  =await axios.put(\n//        `http://5.161.141.215:5000/api/users/profile`,{name:name,email:email,password:password},\n//        {\n//        headers:{\n//          'Content-Type' :\"application/json\",\n//          Authorization:`Bearer ${token}`\n//        }}\n//     )\n//     localStorage.setItem(\"users\", JSON.stringify(data));\n//     dispatch({ type: \"put_changeuserdata_succes\", payload: data});\n//   } \n//   catch (error) {\n//     dispatch({ type: \"put_changeuserdata_failed\", payload: error.message });\n//   }\n// };\n// export const newOrder =(address,city,postalcode,phone)  => async (dispatch, getState) => {\n// const totalPrice= getState().price\n// const basket= getState().basket\n// const token= getState().user.user.token\n//  try {\n//     const {data}  =await axios.post(\n//    \"http://5.161.141.215:5000/api/orders\",{orderItems:basket,\n//     shippingAddress:{address:address,city:city,postalCode:postalcode,phone:phone},\n//     paymentMethod:\"cart\",\n//     itemsPrice: totalPrice,\n//     shippingPrice:\"0.00\",\n//     totalPrice: totalPrice,\n//     },\n//     {headers:{\n//       'Content-Type' :\"application/json\",\n//       Authorization:`Bearer ${token}`\n//     }}\n//     )\n//     dispatch({ type: \"post_neworder_succes\", payload: data});\n//   } \n//   catch (error) {\n//     dispatch({ type: \"post_neworder_failed\", payload: error.message });\n//   }\n// };\n// export const myOrder =()  => async (dispatch, getState) => {\n//   const token= getState().user.user.token\n//    try {\n//       const {data}  =await axios.get(\n//      \"http://5.161.141.215:5000/api/orders/myorders\",\n//       {headers:{\n//         'Content-Type' :\"application/json\",\n//         Authorization:`Bearer ${token}`\n//       }}\n//       )\n//       dispatch({ type: \"get_myorder_succes\", payload: data});\n//     } \n//     catch (error) {\n//       dispatch({ type: \"get_myorder_failed\", payload: error.message });\n//     }\n//   };\n// export const eachorderData = (params) => async (dispatch, getState) => {\n//   const token= getState().user.user.token\n//   try {\n//     const {data}  = await axios.get(\n//       `http://5.161.141.215:5000/api/orders/${params.id}`,\n//       {headers:{\n//         'Content-Type' :\"application/json\",\n//         Authorization:`Bearer ${token}`\n//       }}\n//     );\n//     dispatch({ type: \"get_eachorder_succes\", payload: data});\n//   } \n//   catch (error) {\n//     dispatch({ type: \"get_eachorder_failed\", payload: error.message });\n//   }\n// };\n// export const basketAction = (basket) => (dispatch, getState) => {\n//   const name= getState().eachproduct.name\n//   const price= getState().eachproduct.price\n//   const countInStock= (getState().eachproduct.countInStock)-1\n//   const qty = 1\n//   const product= getState().eachproduct._id\n//   const image= getState().eachproduct.image\n//   const help={name,price,countInStock,product,image,qty}\n//   dispatch({ type: \"basket\", payload: [...basket,help] });\n// };\n// export const getNumber = () => (dispatch, getState) => {\n//   const x=getState().basket.length\n//   var num=0;\n//   for(let i=0;i<x;i++){\n//   var y = getState().basket[i].qty\n//   num = num+y\n//   };\n//   dispatch({ type: \"totalNumber\", payload: num });\n// };\n// export const getPrice = () => (dispatch, getState) => {\n//   const x=getState().basket.length\n//   var price=0;\n//   for(let i=0;i<x;i++){\n//   var y = getState().basket[i].price\n//   var z = getState().basket[i].qty\n//   price = price+y*z\n//   };\n//   dispatch({ type: \"totalprice\", payload: price });\n// };\n// export const deleteItem = (index) => (dispatch, getState) => {\n//   const help= getState().basket\n//   help.splice(index,1)\n//   dispatch({ type: \"deleteItem\", payload: [...help] });\n// };\n// export const plusItem = (basket,index) => (dispatch, getState) => {\n//   basket[index].qty=basket[index].qty+1\n//   dispatch({ type: \"plus\", payload: [...basket] });\n// };\n// export const minusItem = (basket,index) => (dispatch, getState) => {\n//   basket[index].qty=basket[index].qty-1\n//   dispatch({ type: \"minus\", payload: [...basket] });\n// };\n// export const availableItem = (basket,index) => (dispatch, getState) => {\n//   basket[index].countInStock = (getState().eachproduct.countInStock) -(basket[index].qty)+1\n//   dispatch({ type: \"available\", payload: [...basket] });\n// };\n// export const addressAction = (address,city,postalcode,phone) => (dispatch, getState) => {\n//   dispatch({ type: \"address\", payload: {address,city,postalcode,phone} });\n// };\n\nexport const emptyFilter = () => (dispatch, getState) => {\n  dispatch({\n    type: \"emptyFilter\",\n    payload: []\n  });\n}; // export const emptyNumber = () => (dispatch, getState) => {\n//   dispatch({ type: \"emptynumber\", payload: 0 });\n// };\n// export const emptyPrice = () => (dispatch, getState) => {\n//   dispatch({ type: \"emptyprice\", payload: 0 });\n// };\n// export const logoutUser = () => (dispatch, getState) => {\n//   dispatch({ type: \"logout-user\", payload: {} });\n// };","map":{"version":3,"sources":["D:/final project/src/action.js"],"names":["axios","jobData","dispatch","getState","data","get","jobresult","result","jobdata","items","type","payload","error","console","log","message","searchData","search","search1","search2","help","job","product","filtered","filter","obj","contract","filtered1","includes","filtered2","position","emptyFilter"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACzD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CACrB,oDADqB,CAAvB;AAGA,UAAMC,SAAS,GAACF,IAAI,CAACG,MAArB;AACA,UAAMC,OAAO,GAACF,SAAS,CAACG,KAAxB,CALE,CAMF;;AACAP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAE,CAAC,GAAGH,OAAJ;AAAnC,KAAD,CAAR;AACD,GARD,CAQE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACAb,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEC,KAAK,CAACG;AAAzC,KAAD,CAAR;AACD;AACF,CAbM;AAcP,OAAO,MAAMC,UAAU,GAAG,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,KAA4B,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AAClF,QAAMiB,IAAI,GAACjB,QAAQ,GAAGkB,GAAX,CAAeC,OAA1B;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,EAApB,EAFkF,CAGlF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ,EAAmBC,OAAnB,EAA2BC,OAA3B;AACI,QAAMI,QAAQ,GAAGH,IAAI,CAACI,MAAL,CAAYC,GAAG,IAAI;AAClC,WAAOA,GAAG,CAACC,QAAJ,KAAiB,WAAxB;AACD,GAFgB,CAAjB;AAGAb,EAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACA,QAAMI,SAAS,GAAGP,IAAI,CAACI,MAAL,CAAYC,GAAG,IAAI;AACnC,WAAOA,GAAG,CAACG,QAAJ,CAAaT,OAAb,CAAP;AACD,GAFiB,CAAlB;AAIAN,EAAAA,OAAO,CAACC,GAAR,CAAYa,SAAZ;AAEA,QAAME,SAAS,GAAGF,SAAS,CAACH,MAAV,CAAiBC,GAAG,IAAI;AACxC,WAAOA,GAAG,CAACK,QAAJ,IAAgBb,MAAvB;AACD,GAFiB,CAAlB;AAGAJ,EAAAA,OAAO,CAACC,GAAR,CAAYe,SAAZ,EAzB8E,CA0BhF;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA3B,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,OAAO,EAAEkB;AAA3B,GAAD,CAAR;AACD,CAtwB;AACvDD,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAAD,CAAR;AACD,CAFM,C,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport axios from \"axios\";\r\nexport const jobData = () => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://jabama-devjobs-api.vercel.app/api/v1/jobs/\"\r\n    );\r\n    const jobresult=data.result\r\n    const jobdata=jobresult.items\r\n    // localStorage.setItem(\"products\", JSON.stringify(data));\r\n    dispatch({ type: \"get_job_succes\", payload: [...jobdata] });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch({ type: \"get_job_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const searchData = (search,search1,search2) => async (dispatch, getState) => {\r\n  const help=getState().job.product\r\n  console.log(getState())\r\n  // const x=help.length\r\n  // const help1=[]\r\n  // for(let i=0;i<x;i++){\r\n  //     var y = help[i].contract\r\n  //     console.log(y)\r\n  //     {y != \"Full Time\" && help.splice(i,1)} \r\n  //     };\r\n  //     console.log([...help])\r\n  console.log(search,search1,search2)\r\n      const filtered = help.filter(obj => {\r\n        return obj.contract === 'Full Time';\r\n      });   \r\n      console.log(filtered)\r\n      const filtered1 = help.filter(obj => {\r\n        return obj.includes(search2) \r\n      }); \r\n   \r\n      console.log(filtered1) \r\n\r\n      const filtered2 = filtered1.filter(obj => {\r\n        return obj.position == search;\r\n      });   \r\n      console.log(filtered2) \r\n    // help.splice(index,1)\r\n    //   dispatch({ type: \"deleteItem\", payload: [...help]\r\n  // const contract=[]\r\n  // const fullTime=[]\r\n  // help.map((item,index)=>{return(  \r\n  //   contract.push(item.contract)  \r\n  //   ) })\r\n  //   console.log(contract)\r\n  // console.log(search,search1,search2)\r\n  // {search2==true ? fullTime==contract.includes(\"Full Time\"): console.log(contract) }\r\n  // console.log(fullTime)\r\n  dispatch({ type: \"search\", payload: filtered2});\r\n};\r\n\r\n\r\n\r\n// export const eachproductData = (params) => async (dispatch, getState) => {\r\n//   try {\r\n//     const {data}  = await axios.get(\r\n//       `http://5.161.141.215:5000/api/products/${params.id}`\r\n//     );\r\n//     dispatch({ type: \"get_eachproduct_succes\", payload: data});\r\n//   } \r\n//   catch (error) {\r\n//     dispatch({ type: \"get_eachproduct_failed\", payload: error.message });\r\n//   }\r\n// };\r\n// export const newUser =()  => async (dispatch, getState) => {\r\n//   try {\r\n//     const {data}  =await axios.post(\r\n    \r\n//     'https://62.204.61.253:9392/api/v1/user/create',{full_name:\"ali\",username:\"admin\",\"password\":\"123456\"}\r\n//     )\r\n//     localStorage.setItem(\"users\", JSON.stringify(data));\r\n//     dispatch({ type: \"post_newuser_succes\", payload: data});\r\n//   } \r\n//   catch (error) {\r\n//     dispatch({ type: \"post_newuser_failed\", payload: error.message });\r\n//   }\r\n// };\r\n// export const loginUser =()  => async (dispatch, getState) => {\r\n//   try {\r\n//     const {data}  =await axios.post(\r\n    \r\n//     \"https://62.204.61.253:9392/api/v1/login/1\",{\"username\":\"admin\",\"password\":\"123456\"}\r\n//     )\r\n//     localStorage.setItem(\"users\", JSON.stringify(data));\r\n//     dispatch({ type: \"post_loginuser_succes\", payload: data});\r\n//   } \r\n//   catch (error) {\r\n//     dispatch({ type: \"post_loginuser_failed\", payload: error.message });\r\n//   }\r\n// };\r\n// export const userData =()  => async (dispatch, getState) => {\r\n//   const token= getState().user.user.token\r\n//    try {\r\n//     const {data}  =await axios.get(\r\n//        `http://5.161.141.215:5000/api/users/profile`,{\r\n//        headers:{\r\n//          'Content-Type' :\"application/json\",\r\n//          Authorization:`Bearer ${token}`\r\n//        }}\r\n//     )\r\n//     localStorage.setItem(\"users\", JSON.stringify(data));\r\n//     dispatch({ type: \"get_userdata_succes\", payload: data});\r\n//   } \r\n//   catch (error) {\r\n//     dispatch({ type: \"get_userdata_failed\", payload: error.message });\r\n//   }\r\n// };\r\n// export const changeuserData =(password)  => async (dispatch, getState) => {\r\n//   const token= getState().user.user.token\r\n//   const name= getState().user.user.name\r\n//   const email=getState().user.user.email\r\n//   try {\r\n//     const {data}  =await axios.put(\r\n//        `http://5.161.141.215:5000/api/users/profile`,{name:name,email:email,password:password},\r\n//        {\r\n//        headers:{\r\n//          'Content-Type' :\"application/json\",\r\n//          Authorization:`Bearer ${token}`\r\n//        }}\r\n//     )\r\n//     localStorage.setItem(\"users\", JSON.stringify(data));\r\n//     dispatch({ type: \"put_changeuserdata_succes\", payload: data});\r\n//   } \r\n//   catch (error) {\r\n//     dispatch({ type: \"put_changeuserdata_failed\", payload: error.message });\r\n//   }\r\n// };\r\n// export const newOrder =(address,city,postalcode,phone)  => async (dispatch, getState) => {\r\n// const totalPrice= getState().price\r\n// const basket= getState().basket\r\n// const token= getState().user.user.token\r\n//  try {\r\n//     const {data}  =await axios.post(\r\n//    \"http://5.161.141.215:5000/api/orders\",{orderItems:basket,\r\n//     shippingAddress:{address:address,city:city,postalCode:postalcode,phone:phone},\r\n//     paymentMethod:\"cart\",\r\n//     itemsPrice: totalPrice,\r\n//     shippingPrice:\"0.00\",\r\n//     totalPrice: totalPrice,\r\n//     },\r\n//     {headers:{\r\n//       'Content-Type' :\"application/json\",\r\n//       Authorization:`Bearer ${token}`\r\n//     }}\r\n//     )\r\n//     dispatch({ type: \"post_neworder_succes\", payload: data});\r\n//   } \r\n//   catch (error) {\r\n//     dispatch({ type: \"post_neworder_failed\", payload: error.message });\r\n//   }\r\n// };\r\n// export const myOrder =()  => async (dispatch, getState) => {\r\n//   const token= getState().user.user.token\r\n//    try {\r\n//       const {data}  =await axios.get(\r\n//      \"http://5.161.141.215:5000/api/orders/myorders\",\r\n//       {headers:{\r\n//         'Content-Type' :\"application/json\",\r\n//         Authorization:`Bearer ${token}`\r\n//       }}\r\n//       )\r\n//       dispatch({ type: \"get_myorder_succes\", payload: data});\r\n//     } \r\n//     catch (error) {\r\n//       dispatch({ type: \"get_myorder_failed\", payload: error.message });\r\n//     }\r\n//   };\r\n  // export const eachorderData = (params) => async (dispatch, getState) => {\r\n  //   const token= getState().user.user.token\r\n  //   try {\r\n  //     const {data}  = await axios.get(\r\n  //       `http://5.161.141.215:5000/api/orders/${params.id}`,\r\n  //       {headers:{\r\n  //         'Content-Type' :\"application/json\",\r\n  //         Authorization:`Bearer ${token}`\r\n  //       }}\r\n  //     );\r\n  //     dispatch({ type: \"get_eachorder_succes\", payload: data});\r\n  //   } \r\n  //   catch (error) {\r\n  //     dispatch({ type: \"get_eachorder_failed\", payload: error.message });\r\n  //   }\r\n  // };\r\n// export const basketAction = (basket) => (dispatch, getState) => {\r\n//   const name= getState().eachproduct.name\r\n//   const price= getState().eachproduct.price\r\n//   const countInStock= (getState().eachproduct.countInStock)-1\r\n//   const qty = 1\r\n//   const product= getState().eachproduct._id\r\n//   const image= getState().eachproduct.image\r\n//   const help={name,price,countInStock,product,image,qty}\r\n//   dispatch({ type: \"basket\", payload: [...basket,help] });\r\n// };\r\n// export const getNumber = () => (dispatch, getState) => {\r\n//   const x=getState().basket.length\r\n//   var num=0;\r\n//   for(let i=0;i<x;i++){\r\n//   var y = getState().basket[i].qty\r\n//   num = num+y\r\n//   };\r\n//   dispatch({ type: \"totalNumber\", payload: num });\r\n// };\r\n// export const getPrice = () => (dispatch, getState) => {\r\n//   const x=getState().basket.length\r\n//   var price=0;\r\n//   for(let i=0;i<x;i++){\r\n//   var y = getState().basket[i].price\r\n//   var z = getState().basket[i].qty\r\n//   price = price+y*z\r\n//   };\r\n//   dispatch({ type: \"totalprice\", payload: price });\r\n// };\r\n\r\n// export const deleteItem = (index) => (dispatch, getState) => {\r\n//   const help= getState().basket\r\n//   help.splice(index,1)\r\n//   dispatch({ type: \"deleteItem\", payload: [...help] });\r\n// };\r\n// export const plusItem = (basket,index) => (dispatch, getState) => {\r\n//   basket[index].qty=basket[index].qty+1\r\n//   dispatch({ type: \"plus\", payload: [...basket] });\r\n// };\r\n// export const minusItem = (basket,index) => (dispatch, getState) => {\r\n//   basket[index].qty=basket[index].qty-1\r\n//   dispatch({ type: \"minus\", payload: [...basket] });\r\n// };\r\n// export const availableItem = (basket,index) => (dispatch, getState) => {\r\n//   basket[index].countInStock = (getState().eachproduct.countInStock) -(basket[index].qty)+1\r\n//   dispatch({ type: \"available\", payload: [...basket] });\r\n// };\r\n// export const addressAction = (address,city,postalcode,phone) => (dispatch, getState) => {\r\n//   dispatch({ type: \"address\", payload: {address,city,postalcode,phone} });\r\n// };\r\nexport const emptyFilter = () => (dispatch, getState) => {\r\n  dispatch({ type: \"emptyFilter\", payload: [] });\r\n};\r\n// export const emptyNumber = () => (dispatch, getState) => {\r\n//   dispatch({ type: \"emptynumber\", payload: 0 });\r\n// };\r\n// export const emptyPrice = () => (dispatch, getState) => {\r\n//   dispatch({ type: \"emptyprice\", payload: 0 });\r\n// };\r\n// export const logoutUser = () => (dispatch, getState) => {\r\n//   dispatch({ type: \"logout-user\", payload: {} });\r\n// };"]},"metadata":{},"sourceType":"module"}