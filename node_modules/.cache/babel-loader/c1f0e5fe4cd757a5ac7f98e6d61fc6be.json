{"ast":null,"code":"var _jsxFileName = \"D:\\\\final project\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jobData, searchData, emptyFilter, searchFulltime } from './action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const job = useSelector(state => state.job);\n  const filtered = useSelector(state => state.filter);\n  const [search, setSearch] = useState(true);\n  const [search1, setSearch1] = useState(\"\");\n  const [search2, setSearch2] = useState(\"\");\n  const product = job.product;\n  const time = [];\n  let now = new Date(\"2022-10-30T00:00:08.036Z\").getTime(); // product.map((item,index)=>{return(  \n  // time.push(((now-new Date(item.postedAt).getTime())/3600000))  \n  // ) })\n\n  useEffect(() => {\n    dispatch(jobData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Home, \"0O0XGasndbrgq6MWV4l3tfk3Dbw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/final project/src/Home.js"],"names":["React","useEffect","useState","useDispatch","useSelector","jobData","searchData","emptyFilter","searchFulltime","Home","dispatch","job","state","filtered","filter","search","setSearch","search1","setSearch1","search2","setSearch2","product","time","now","Date","getTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAmBC,UAAnB,EAA+BC,WAA/B,EAA4CC,cAA5C,QAAiE,UAAjE;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAACP,WAAW,EAA1B;AACA,QAAMQ,GAAG,GAAEP,WAAW,CAAEQ,KAAD,IAASA,KAAK,CAACD,GAAhB,CAAtB;AACA,QAAME,QAAQ,GAAET,WAAW,CAAEQ,KAAD,IAASA,KAAK,CAACE,MAAhB,CAA3B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMmB,OAAO,GAACV,GAAG,CAACU,OAAlB;AACA,QAAMC,IAAI,GAAC,EAAX;AACA,MAAIC,GAAG,GAAE,IAAIC,IAAJ,CAAS,0BAAT,EAAqCC,OAArC,EAAT,CATwB,CAUxB;AACA;AACA;;AACAxB,EAAAA,SAAS,CAAC,MAAI;AACXS,IAAAA,QAAQ,CAACL,OAAO,EAAR,CAAR;AACD,GAFO,EAEN,EAFM,CAAT;AAKA,sBAAQ;AAAA;AAAA;AAAA;AAAA,UAAR;AAqED,CAvFM;;GAAMI,I;UACIN,W,EACJC,W,EACKA,W;;;KAHLK,I","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { jobData , searchData, emptyFilter, searchFulltime} from './action';\r\n\r\nexport const Home = () => {\r\n  const dispatch=useDispatch()\r\n  const job= useSelector((state)=>state.job)\r\n  const filtered= useSelector((state)=>state.filter)\r\n  const [search, setSearch] = useState(true);\r\n  const [search1, setSearch1] = useState(\"\");\r\n  const [search2, setSearch2] = useState(\"\");\r\n  const product=job.product\r\n  const time=[]\r\n  let now =new Date(\"2022-10-30T00:00:08.036Z\").getTime();\r\n  // product.map((item,index)=>{return(  \r\n  // time.push(((now-new Date(item.postedAt).getTime())/3600000))  \r\n  // ) })\r\n  useEffect(()=>{   \r\n     dispatch(jobData())\r\n   },[]\r\n  ) \r\n\r\n  return (<div>\r\n    {/* {(filtered.length) ?  <div className='cards'>\r\n       {filtered.map((item,index)=>{return( <div key={item.id} \r\n       className=\"card\">\r\n    <img src={item.logo} ></img>\r\n    {time[index]<24 ? <span > {(time[index]).toFixed()} Hours ago </span>:\r\n    (time[index]<168 ? <span > {(time[index]/24).toFixed()} Days ago </span>:\r\n    (time[index]<504 ? <span > {(time[index]/168).toFixed()} Weeks ago </span>:\r\n    <span> {(time[index]/720).toFixed()} Months ago </span>\r\n    ))}\r\n    <span> , </span>\r\n    <span > {item.contract} </span>\r\n    <p className='position' > {item.position}</p>\r\n    <p > {item.company}</p>\r\n    <p className='location' > {item.location}</p>\r\n  \r\n\r\n    </div>)})\r\n   \r\n    } <button onClick={()=>{\r\n      dispatch(emptyFilter())\r\n      setSearch1(\"\");\r\n      setSearch2(\"\");\r\n      setSearch(false);\r\n         }}> Back </button> </div> \r\n    : <div> <header>\r\n      <div><span className=\"material-icons-outlined\">search</span>\r\n      <input placeholder=\"filter by title,company\"  onChange={(e) => \r\n        setSearch1(e.target.value.toLowerCase())}>\r\n      </input></div>\r\n      <div><span class=\"material-icons\">location_on</span>\r\n      <input placeholder=\"filter by location\"  onChange={(e) =>\r\n         setSearch2(e.target.value.toLowerCase())} >\r\n      </input></div>\r\n       <div><input type=\"checkbox\" className='check' checked={search} onChange=\r\n       {()=>{\r\n         setSearch(!search); \r\n       }} />\r\n         <span >Full Time Only</span>\r\n       <button onClick={()=>\r\n       {{search ? dispatch(searchFulltime(search1,search2))\r\n        :dispatch(searchData(search1,search2))\r\n       }}}\r\n       >search</button></div> \r\n     </header>\r\n    <div className='cards' >\r\n        {product\r\n        .map((item,index)=>{return( <div key={item.id} \r\n          className=\"card\">\r\n    <img src={item.logo} ></img>\r\n    <div>\r\n    {time[index]<24 ? <span > {(time[index]).toFixed()} Hours ago </span>:\r\n    (time[index]<168 ? <span > {(time[index]/24).toFixed()} Days ago </span>:\r\n    (time[index]<504 ? <span > {(time[index]/168).toFixed()} Weeks ago </span>:\r\n    <span > {(time[index]/720).toFixed()} Months ago </span>\r\n    ))}\r\n    <span> , </span>\r\n       <span> {item.contract} </span> \r\n    </div>\r\n    \r\n       <p className='position'> {item.position}</p>\r\n    <p > {item.company}</p>\r\n    <p  className='location'> {item.location}</p>\r\n    </div>)})}\r\n    </div>\r\n    <button >LoadMore</button> </div> } */}\r\n    </div>\r\n\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}