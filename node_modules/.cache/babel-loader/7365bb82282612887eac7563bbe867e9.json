{"ast":null,"code":"import axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nexport const productData = () => async (dispatch, getState) => {\n  dispatch({\n    type: \"get_product-request\"\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(\"http://45.138.24.15:9000/api/products/\");\n    localStorage.setItem(\"produsts\", JSON.stringify(data));\n    dispatch({\n      type: \"get_product_succes\",\n      payload: [...data]\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: \"get_product_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const eachproductData = () => {\n  var _s = $RefreshSig$();\n\n  return _s(async (dispatch, getState) => {\n    _s();\n\n    dispatch({\n      type: \"get_eachproduct-request\"\n    });\n\n    try {\n      const {\n        params\n      } = useParams();\n      console.log(params);\n      const {\n        data\n      } = await axios.get(\"http://45.138.24.15:9000/api/products/:id/\");\n      dispatch({\n        type: \"get_eachproduct_succes\",\n        payload: [...data]\n      });\n    } catch (error) {\n      console.log(error.message);\n      dispatch({\n        type: \"get_eachproduct_failed\",\n        payload: error.message\n      });\n    }\n  }, \"n+rSiBHSv495DwHKVP/QtzlX7RU=\", false, function () {\n    return [useParams];\n  });\n};","map":{"version":3,"sources":["C:/Users/Omid/Desktop/final project/src/action.js"],"names":["axios","useParams","productData","dispatch","getState","type","data","get","localStorage","setItem","JSON","stringify","payload","console","log","error","message","eachproductData","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,SAAV,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC7DD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,GAAN,CACrB,wCADqB,CAAvB;AAGAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACAH,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,oBAAR;AAA8BO,MAAAA,OAAO,EAAE,CAAC,GAAGN,IAAJ;AAAvC,KAAD,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,GAPD,CAOE,OAAOS,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACAb,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,oBAAR;AAA8BO,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAA7C,KAAD,CAAR;AACD;AACF,CAbM;AAcP,OAAO,MAAMC,eAAe,GAAG;AAAA;;AAAA,YAAM,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AAAA;;AAEjED,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAM;AAACa,QAAAA;AAAD,UAASjB,SAAS,EAAxB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,YAAM;AAAEZ,QAAAA;AAAF,UAAW,MAAMN,KAAK,CAACO,GAAN,CACrB,4CADqB,CAAvB;AAGAJ,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,wBAAR;AAAkCO,QAAAA,OAAO,EAAE,CAAC,GAAGN,IAAJ;AAA3C,OAAD,CAAR;AACD,KAPD,CAOE,OAAOS,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACAb,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,wBAAR;AAAkCO,QAAAA,OAAO,EAAEG,KAAK,CAACC;AAAjD,OAAD,CAAR;AACD;AACF,GAd8B;AAAA,YAIZf,SAJY;AAAA;AAAA,CAAxB","sourcesContent":["import axios from \"axios\";\r\nimport {  useParams } from 'react-router-dom';\r\n\r\nexport const productData = () => async (dispatch, getState) => {\r\n  dispatch({ type: \"get_product-request\" });\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"http://45.138.24.15:9000/api/products/\"\r\n    );\r\n    localStorage.setItem(\"produsts\", JSON.stringify(data));\r\n    dispatch({ type: \"get_product_succes\", payload: [...data] });\r\n    console.log(data)\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch({ type: \"get_product_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const eachproductData = () => async (dispatch, getState) => {\r\n \r\n  dispatch({ type: \"get_eachproduct-request\" });\r\n  try {\r\n    const {params}=useParams();\r\n    console.log(params)\r\n    const { data } = await axios.get(\r\n      \"http://45.138.24.15:9000/api/products/:id/\"\r\n    );\r\n    dispatch({ type: \"get_eachproduct_succes\", payload: [...data] });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch({ type: \"get_eachproduct_failed\", payload: error.message });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}