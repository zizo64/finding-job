{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mojtaba Salahshoor\\\\Desktop\\\\final project\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from './action';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // const [flag,setFlag] = useState(\"false\");\n\n  const {\n    user\n  } = useSelector(state => state.user);\n\n  const validate = () => {\n    if (!user.id) {\n      setMessage(\"wrong email or password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"darkgray\",\n        height: \"500px\",\n        margin: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr\",\n          textAlign: \"center\",\n          margin: \"20px 0\",\n          padding: \"20px\",\n          backgroundColor: \"gray\"\n        },\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"500px\",\n          margin: \"20px auto\",\n          textAlign: \"left\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"1fr 1fr\",\n            padding: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            children: \" Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n              setMessage(\"\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"1fr 1fr\",\n            padding: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            children: \" Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n              setMessage(\"\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"black\",\n              color: \"white\",\n              margin: \"20px auto\",\n              padding: \"5px 40px\"\n            },\n            onClick: () => {\n              dispatch(loginUser(email, password));\n              ;\n              validate();\n            },\n            children: \" login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"./signup\"),\n            style: {\n              backgroundColor: \"black\",\n              color: \"white\",\n              margin: \"20px auto\",\n              padding: \"5px 40px\"\n            },\n            children: \" sign up \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), email && password ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"red\"\n          },\n          children: [\"  \", message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"U358QCFZJDjunQUp9ZCalBrTj5w=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Mojtaba Salahshoor/Desktop/final project/src/Login.js"],"names":["React","useEffect","useState","useDispatch","useSelector","loginUser","useNavigate","useParams","Login","navigate","dispatch","email","setEmail","message","setMessage","password","setPassword","user","state","validate","id","backgroundColor","height","margin","display","gridTemplateColumns","textAlign","padding","width","e","target","value","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from './action';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n  const navigate=useNavigate();\r\n  const dispatch=useDispatch()\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    // const [flag,setFlag] = useState(\"false\");\r\n    const {user}= useSelector((state)=>state.user);\r\n    const  validate=()=>{\r\n      if(!user.id){setMessage(\"wrong email or password\")}\r\n    }\r\n\r\n  return (<>\r\n  <div style={{backgroundColor:\"darkgray\", height:\"500px\",margin:\"50px\"}}>\r\n    <h3 style={{display:\"grid\", gridTemplateColumns:\"1fr\",textAlign:\"center\" ,margin:\"20px 0\",padding:\"20px\",backgroundColor:\"gray\"}}> Login</h3>\r\n    <div style={{backgroundColor:\"white\", width:\"500px\",margin:\"20px auto\", textAlign:\"left\",padding:\"10px\"}}>\r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n    <lable > Email</lable>\r\n    <input  type=\"email\" value={email} onChange= {(e) => {\r\n              setEmail(e.target.value);\r\n              setMessage(\"\")}}></input>\r\n    </div>\r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n    <lable > Password </lable>\r\n    <input  type=\"password\" value={password} onChange= {(e) => {\r\n              setPassword(e.target.value);\r\n              setMessage(\"\")}}></input>\r\n    </div>\r\n    <div style={{textAlign:\"center\"}}>\r\n    \r\n     <button style={{backgroundColor:\"black\",color:\"white\",margin:\"20px auto\",padding:\"5px 40px\"}}\r\n     onClick={()=>{ \r\n      dispatch(loginUser(email,password));\r\n      ;validate()\r\n      \r\n       ;}}\r\n     > login </button> \r\n     <button onClick={()=>navigate(\"./signup\")} style={{backgroundColor:\"black\",color:\"white\",margin:\"20px auto\",padding:\"5px 40px\"}}> sign up </button>\r\n    </div>\r\n    {(email && password ) ? <p style={{textAlign:\"center\",color:\"red\"}}>  {message} </p> :<p> </p> } \r\n   </div>\r\n     </div>\r\n  </>\r\n   \r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}