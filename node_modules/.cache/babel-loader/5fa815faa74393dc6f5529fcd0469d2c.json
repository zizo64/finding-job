{"ast":null,"code":"var _jsxFileName = \"F:\\\\front end\\\\keykavoszaman\\\\final project\\\\src\\\\Setting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeuserData } from './action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Setting = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setrePassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const passRegex = /^[A-Za-z]\\w{5,10}$/;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"darkgray\",\n      height: \"500px\",\n      margin: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr\",\n        textAlign: \"center\",\n        margin: \"20px 0\",\n        padding: \"20px\",\n        backgroundColor: \"gray\"\n      },\n      children: \" Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        width: \"500px\",\n        margin: \"20px auto\",\n        textAlign: \"left\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"7-12 characters,first must be letter \",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n            {\n              passRegex.test(password) ? setMessage(\"Your pass looks good!\") : setMessage(\"Please enter a valid pass!\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Retype Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: rePassword,\n          onChange: e => {\n            setrePassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this), password != rePassword && rePassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Is not like your password yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: password == rePassword && passRegex.test(password) && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            margin: \"20px auto\",\n            padding: \"5px 40px\"\n          },\n          onClick: () => {\n            dispatch(changeuserData(password));\n          },\n          children: \" Aplly Setting \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Setting, \"8ASY/U72cYWHe0xpm9aJXxa6aPQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["F:/front end/keykavoszaman/final project/src/Setting.js"],"names":["React","useState","useDispatch","changeuserData","Setting","password","setPassword","rePassword","setrePassword","message","setMessage","passRegex","dispatch","backgroundColor","height","margin","display","gridTemplateColumns","textAlign","padding","width","e","target","value","test","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeuserData } from './action';\r\n\r\nexport const Setting = () => {\r\n  const [password,setPassword] = useState(\"\");\r\n  const [rePassword,setrePassword] = useState(\"\");\r\n  const [message,setMessage] = useState(\"\");\r\n  const passRegex=/^[A-Za-z]\\w{5,10}$/;\r\n  const dispatch=useDispatch()\r\n  return (\r\n    \r\n    <div style={{backgroundColor:\"darkgray\", height:\"500px\",margin:\"50px\"}}>\r\n    <h3 style={{display:\"grid\", gridTemplateColumns:\"1fr\",textAlign:\"center\" ,margin:\"20px 0\",padding:\"20px\",backgroundColor:\"gray\"}}> Change Password</h3>\r\n    <div style={{backgroundColor:\"white\", width:\"500px\",margin:\"20px auto\", textAlign:\"left\",padding:\"10px\"}}>\r\n    \r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n    <span > Password </span>\r\n    <input  type=\"password\" placeholder='7-12 characters,first must be letter ' value={password} \r\n    onChange= {(e) => {\r\n          setPassword(e.target.value)\r\n           {passRegex.test(password)? setMessage(\"Your pass looks good!\"):setMessage(\"Please enter a valid pass!\")}\r\n            }}></input>\r\n            <p> {message}</p>\r\n    </div>\r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n    <span > Retype Password</span>\r\n    <input type=\"password\" value={rePassword} onChange= {(e) => {\r\n              setrePassword(e.target.value)}}></input> \r\n     {(password != rePassword && rePassword) && <p style={{color:\"red\"}}>Is not like your password yet</p>}                \r\n    </div>\r\n    <div style={{textAlign:\"center\"}}>\r\n    { (password == rePassword && passRegex.test(password)) &&  \r\n    <button style={{backgroundColor:\"black\",color:\"white\",margin:\"20px auto\",padding:\"5px 40px\"}} \r\n     onClick={()=>{ \r\n      (dispatch(changeuserData(password)))\r\n       ;}}\r\n    > Aplly Setting </button>}\r\n    </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}