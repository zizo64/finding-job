{"ast":null,"code":"import axios from \"axios\";\nexport const jobData = () => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"https://jabama-devjobs-api.vercel.app/api/v1/jobs/\");\n    const jobresult = data.result;\n    const jobdata = jobresult.items;\n    console.log(jobdata);\n    dispatch({\n      type: \"get_job_succes\",\n      payload: [...jobdata]\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: \"get_job_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const searchFulltime = (search1, search2) => async (dispatch, getState) => {\n  const help = getState().job;\n  const filtered = help.filter(obj => {\n    return obj.contract === 'Full Time';\n  });\n  const filtered1 = filtered.filter(obj => {\n    return obj.location.toLowerCase().includes(search2);\n  });\n  const filtered2 = filtered1.filter(obj => {\n    return obj.position.toLowerCase().includes(search1) || obj.company.toLowerCase().includes(search1);\n  });\n  dispatch({\n    type: \"search\",\n    payload: filtered2\n  });\n};\nexport const searchData = (search1, search2) => async (dispatch, getState) => {\n  const help = getState().job;\n  const filtered = help;\n  const filtered1 = filtered.filter(obj => {\n    return obj.location.toLowerCase().includes(search2);\n  });\n  const filtered2 = filtered1.filter(obj => {\n    return obj.position.toLowerCase().includes(search1) || obj.company.toLowerCase().includes(search1);\n  });\n  dispatch({\n    type: \"search\",\n    payload: filtered2\n  });\n};\nexport const emptyFilter = () => (dispatch, getState) => {\n  dispatch({\n    type: \"emptyFilter\",\n    payload: []\n  });\n};","map":{"version":3,"sources":["D:/final project/src/action.js"],"names":["axios","jobData","dispatch","getState","data","get","jobresult","result","jobdata","items","console","log","type","payload","error","message","searchFulltime","search1","search2","help","job","filtered","filter","obj","contract","filtered1","location","toLowerCase","includes","filtered2","position","company","searchData","emptyFilter"],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\nexport const jobData = () => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://jabama-devjobs-api.vercel.app/api/v1/jobs/\"\r\n    );\r\n    const jobresult=data.result\r\n    const jobdata=jobresult.items\r\n  \r\n    console.log(jobdata)\r\n    dispatch({ type: \"get_job_succes\", payload: [...jobdata] });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch({ type: \"get_job_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const searchFulltime = (search1,search2) => async (dispatch, getState) => {\r\n  const help=getState().job\r\n  const filtered = help.filter(obj => {\r\n    return obj.contract === 'Full Time';\r\n  })       \r\n      const filtered1 = filtered.filter(obj => {\r\n        return (obj.location).toLowerCase().includes(search2) \r\n      }); \r\n      const filtered2 = filtered1.filter(obj => {\r\n        return (obj.position).toLowerCase().includes(search1) ||(obj.company).toLowerCase().includes(search1)\r\n      });    \r\n  dispatch({ type: \"search\", payload: filtered2});\r\n};\r\n\r\nexport const searchData = (search1,search2) => async (dispatch, getState) => {\r\n  const help=getState().job\r\n  const filtered = help     \r\n      const filtered1 = filtered.filter(obj => {\r\n        return (obj.location).toLowerCase().includes(search2) \r\n      }); \r\n      const filtered2 = filtered1.filter(obj => {\r\n        return (obj.position).toLowerCase().includes(search1) ||(obj.company).toLowerCase().includes(search1)\r\n      });   \r\n  dispatch({ type: \"search\", payload: filtered2});\r\n};\r\nexport const emptyFilter = () => (dispatch, getState) => {\r\n  dispatch({ type: \"emptyFilter\", payload: [] });\r\n};"]},"metadata":{},"sourceType":"module"}