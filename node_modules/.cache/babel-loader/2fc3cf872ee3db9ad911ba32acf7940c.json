{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer, eachproductReducer, basketReducer, userReducer, numberReducer, priceReducer, orderReducer, eachorderReducer } from \"./reducer\";\nconst reducers = combineReducers({\n  product: productReducer,\n  eachproduct: eachproductReducer,\n  basket: basketReducer,\n  user: userReducer,\n  number: numberReducer,\n  price: priceReducer,\n  order: orderReducer,\n  eachorder: eachorderReducer\n});\nconst middleware = [thunk];\nconst localstorageproducts = JSON.parse(localStorage.getItem(\"products\")) ? JSON.parse(localStorage.getItem(\"products\")) : [];\nconst initialState = {\n  product: {\n    product: localstorageproducts,\n    error: \"\"\n  }\n};\nconst store = createStore(reducers, initialState, applyMiddleware(...middleware));\nexport default store;","map":{"version":3,"sources":["C:/Users/Mojtaba Salahshoor/Desktop/final project/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","eachproductReducer","basketReducer","userReducer","numberReducer","priceReducer","orderReducer","eachorderReducer","reducers","product","eachproduct","basket","user","number","price","order","eachorder","middleware","localstorageproducts","JSON","parse","localStorage","getItem","initialState","error","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,cAAR,EAAwBC,kBAAxB,EAA4CC,aAA5C,EAA2DC,WAA3D,EAAuEC,aAAvE,EAAqFC,YAArF,EAAkGC,YAAlG,EAA+GC,gBAA/G,QAAsI,WAAtI;AACA,MAAMC,QAAQ,GAAGZ,eAAe,CAAC;AAC/Ba,EAAAA,OAAO,EAAET,cADsB;AAE/BU,EAAAA,WAAW,EAAET,kBAFkB;AAG/BU,EAAAA,MAAM,EAAET,aAHuB;AAI/BU,EAAAA,IAAI,EAAET,WAJyB;AAK/BU,EAAAA,MAAM,EAAET,aALuB;AAM/BU,EAAAA,KAAK,EAAET,YANwB;AAO/BU,EAAAA,KAAK,EAAET,YAPwB;AAQ/BU,EAAAA,SAAS,EAACT;AARqB,CAAD,CAAhC;AAWA,MAAMU,UAAU,GAAG,CAACnB,KAAD,CAAnB;AACA,MAAMoB,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,IACzBH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GAEzB,EAFJ;AAGA,MAAMC,YAAY,GAAG;AACpBd,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAO,EAAES,oBAAX;AAAkCM,IAAAA,KAAK,EAAE;AAAzC;AADW,CAArB;AAGA,MAAMC,KAAK,GAAG9B,WAAW,CACvBa,QADuB,EAEvBe,YAFuB,EAGvB1B,eAAe,CAAC,GAAGoB,UAAJ,CAHQ,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {productReducer, eachproductReducer, basketReducer ,userReducer,numberReducer,priceReducer,orderReducer,eachorderReducer} from \"./reducer\";\r\nconst reducers = combineReducers({\r\n  product: productReducer,\r\n  eachproduct: eachproductReducer,\r\n  basket: basketReducer,\r\n  user: userReducer,\r\n  number: numberReducer,\r\n  price: priceReducer,\r\n  order: orderReducer,\r\n  eachorder:eachorderReducer\r\n\r\n});\r\nconst middleware = [thunk];\r\nconst localstorageproducts = JSON.parse(localStorage.getItem(\"products\")) \r\n  ? JSON.parse(localStorage.getItem(\"products\"))\r\n  : [];\r\nconst initialState = {\r\n product: { product: localstorageproducts,  error: \"\" }\r\n};\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}