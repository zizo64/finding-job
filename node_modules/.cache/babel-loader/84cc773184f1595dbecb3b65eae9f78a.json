{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mojtaba Salahshoor\\\\Desktop\\\\final project\\\\src\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newUser } from './action';\nimport { loginUser } from './action';\nimport { userData } from './action';\nimport { useNavigate } from 'react-router-dom';\nimport { computeHeadingLevel } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setrePassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [message1, setMessage1] = useState(\"\");\n  const passRegex = /^[A-Za-z]\\w{5,10}$/;\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n  const dispatch = useDispatch(); // const token= user.token\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"darkgray\",\n      height: \"500px\",\n      margin: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr\",\n        textAlign: \"center\",\n        margin: \"20px 0\",\n        padding: \"20px\",\n        backgroundColor: \"gray\"\n      },\n      children: \" Registration form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        width: \"500px\",\n        margin: \"20px auto\",\n        textAlign: \"left\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          children: \" Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          children: \" Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => {\n            setEmail(e.target.value);\n            {\n              emailRegex.test(email) ? setMessage1(\"Your email looks good!\") : setMessage1(\"Please enter a valid email!\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", message1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          children: \" Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"7-12 characters,first must be letter \",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n            {\n              passRegex.test(password) ? setMessage(\"Your pass looks good!\") : setMessage(\"Please enter a valid pass!\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          children: \" Retype Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: rePassword,\n          onChange: e => {\n            setrePassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this), password != rePassword && rePassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Is not like your password yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: password == rePassword && password && email && name && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            margin: \"20px auto\",\n            padding: \"5px 40px\"\n          },\n          onClick: () => {\n            dispatch(newUser(name, email, password));\n          },\n          children: \" sign up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"IZF51otiXqd7Jk3/Dq3YFvZ6vDQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/Mojtaba Salahshoor/Desktop/final project/src/Signup.js"],"names":["React","useEffect","useState","useDispatch","useSelector","newUser","loginUser","userData","useNavigate","computeHeadingLevel","Signup","name","setName","email","setEmail","password","setPassword","rePassword","setrePassword","message","setMessage","message1","setMessage1","passRegex","emailRegex","dispatch","backgroundColor","height","margin","display","gridTemplateColumns","textAlign","padding","width","e","target","value","test","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newUser } from './action';\r\nimport { loginUser } from './action';\r\nimport { userData } from './action';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { computeHeadingLevel } from '@testing-library/react';\r\n\r\nexport const Signup = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [rePassword,setrePassword] = useState(\"\");\r\n    const [message,setMessage] = useState(\"\");\r\n    const [message1,setMessage1] = useState(\"\");\r\n    const passRegex=/^[A-Za-z]\\w{5,10}$/;\r\n    const emailRegex=/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n    const dispatch=useDispatch()\r\n    // const token= user.token\r\n  return (\r\n    <div style={{backgroundColor:\"darkgray\", height:\"500px\",margin:\"50px\"}}>\r\n    <h3 style={{display:\"grid\", gridTemplateColumns:\"1fr\",textAlign:\"center\" ,margin:\"20px 0\",padding:\"20px\",backgroundColor:\"gray\"}}> Registration form</h3>\r\n    <div style={{backgroundColor:\"white\", width:\"500px\",margin:\"20px auto\", textAlign:\"left\",padding:\"10px\"}}>\r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n     <lable > Name</lable>\r\n    <input type=\"text\" value={name} onChange= {(e) => {\r\n              setName(e.target.value)}}></input>\r\n    </div> \r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n    <lable > Email</lable>\r\n    <input  type=\"email\" value={email} onChange= {(e) => {\r\n              setEmail(e.target.value);\r\n              {emailRegex.test(email)? setMessage1(\"Your email looks good!\"):setMessage1(\"Please enter a valid email!\")}\r\n              }}></input>\r\n              <p> {message1}</p>\r\n    </div>\r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n    <lable > Password </lable>\r\n    <input  type=\"password\" placeholder='7-12 characters,first must be letter ' value={password} \r\n    onChange= {(e) => {\r\n      setPassword(e.target.value);\r\n      {passRegex.test(password)? setMessage(\"Your pass looks good!\"):setMessage(\"Please enter a valid pass!\")}\r\n    }}></input>\r\n     <p> {message}</p>\r\n    </div>\r\n    <div style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr\",padding:\"10px\"}}>\r\n    <lable > Retype Password</lable>\r\n    <input type=\"password\" value={rePassword} onChange= {(e) => {\r\n              setrePassword(e.target.value)}}></input> \r\n     {(password != rePassword && rePassword) && <p style={{color:\"red\"}}>Is not like your password yet</p>}                \r\n    </div>\r\n    <div style={{textAlign:\"center\"}}>\r\n    {(password == rePassword && password && email && name ) &&  \r\n    <button style={{backgroundColor:\"black\",color:\"white\",margin:\"20px auto\",padding:\"5px 40px\"}} \r\n    onClick={()=>{ \r\n      dispatch(newUser(name,email,password))\r\n       ;}}\r\n    > sign up </button>}\r\n    </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}