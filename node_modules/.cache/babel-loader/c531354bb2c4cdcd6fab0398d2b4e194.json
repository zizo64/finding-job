{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omid\\\\Desktop\\\\routerdom\\\\src\\\\Usercomment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { commentData } from './action';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Usercomment = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    comment\n  } = useSelector(state => state.comment);\n  const navigate = useNavigate();\n  const params = useParams();\n  useEffect(() => {\n    dispatch(commentData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", user[params.postid - 1].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\"\n      },\n      children: comment.filter(item => {\n        return +item.postId === +params.commentid;\n      }).map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"solid 1px black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 5\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 31\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Usercomment, \"Bk9Tz8+PchhxnFdlM2ewl/KKcfo=\", false, function () {\n  return [useDispatch, useSelector, useNavigate, useParams];\n});\n\n_c = Usercomment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Usercomment\");","map":{"version":3,"sources":["C:/Users/Omid/Desktop/routerdom/src/Usercomment.js"],"names":["React","useEffect","useDispatch","useSelector","commentData","useNavigate","useParams","Usercomment","dispatch","comment","state","navigate","params","user","postid","name","display","gridTemplateColumns","filter","item","postId","commentid","map","border","id","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAQ,GAACN,WAAW,EAA1B;AACA,QAAM;AAACO,IAAAA;AAAD,MAAWN,WAAW,CAAEO,KAAD,IAASA,KAAK,CAACD,OAAhB,CAA5B;AACA,QAAME,QAAQ,GAACN,WAAW,EAA1B;AACA,QAAMO,MAAM,GAACN,SAAS,EAAtB;AACAL,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AAAwB,GADjB,EACkB,EADlB,CAAT;AAGA,sBAAQ;AAAA,4BACN;AAAA,sBAAMS,IAAI,CAACD,MAAM,CAACE,MAAP,GAAc,CAAf,CAAJ,CAAsBC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,mBAAmB,EAAC;AAArC,OAAb;AAAA,gBACKR,OAAO,CACPS,MADA,CAEIC,IAAD,IAAQ;AAAC,eAAO,CAACA,IAAI,CAACC,MAAN,KAAiB,CAACR,MAAM,CAACS,SAAhC;AAA0C,OAFtD,EAGAC,GAHA,CAGKH,IAAD,IAAQ;AAAC,4BAAQ;AAAsB,UAAA,KAAK,EAAE;AAAEI,YAAAA,MAAM,EAAC;AAAT,WAA7B;AAAA,kCAC1B;AAAA,4BAAKJ,IAAI,CAACK,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD0B,eAE1B;AAAA,4BAAKL,IAAI,CAACJ,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAF0B,eAG1B;AAAA,4BAAKI,IAAI,CAACM,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAH0B;AAAA,WAAUhB,OAAO,CAACe,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAIV,OAPH;AADL;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA,kBAAR;AAaO,CArBF;;GAAMjB,W;UACIL,W,EACEC,W,EACFE,W,EACFC,S;;;KAJFC,W","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { commentData } from './action';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport const Usercomment = () => {\r\n  const dispatch=useDispatch()\r\n  const {comment}= useSelector((state)=>state.comment)\r\n  const navigate=useNavigate();\r\n  const params=useParams();\r\n  useEffect(()=>{\r\n    dispatch(commentData())},[]\r\n  )\r\n  return (<>\r\n    <p > {user[params.postid-1].name}</p>\r\n    <div  style={{display:\"grid\", gridTemplateColumns:\"1fr 1fr 1fr 1fr 1fr\"}}>\r\n        {comment\r\n        .filter(\r\n            (item)=>{return +item.postId === +params.commentid})\r\n        .map((item)=>{return( <div key={comment.id} style={{ border:\"solid 1px black\"}}>\r\n    <p> {item.id}</p>\r\n    <p> {item.name}</p>\r\n    <p> {item.email}</p>\r\n    </div>)})}</div>\r\n    </>\r\n  )\r\n        }"]},"metadata":{},"sourceType":"module"}