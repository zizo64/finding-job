{"ast":null,"code":"import axios from \"axios\";\nexport const productData = () => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://95.216.184.20:9000/api/products/\"); // localStorage.setItem(\"products\", JSON.stringify(data));\n\n    dispatch({\n      type: \"get_product_succes\",\n      payload: [...data]\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: \"get_product_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const eachproductData = params => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(`http://95.216.184.20:9000/api/products/${params.id}`);\n    dispatch({\n      type: \"get_eachproduct_succes\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"get_eachproduct_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const newUser = (name, email, password) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.post(`http://95.216.184.20:9000/api/users`, {\n      name: name,\n      email: email,\n      password: password\n    });\n    localStorage.setItem(\"users\", JSON.stringify(data));\n    dispatch({\n      type: \"post_newuser_succes\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"post_newuser_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const loginUser = (email, password) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.post(`http://95.216.184.20:9000/api/users/login`, {\n      email: email,\n      password: password\n    });\n    localStorage.setItem(\"users\", JSON.stringify(data));\n    dispatch({\n      type: \"post_loginuser_succes\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"post_loginuser_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const userData = () => async (dispatch, getState) => {\n  const token = getState().user.user.token;\n\n  try {\n    const {\n      data\n    } = await axios.get(`http://95.216.184.20:9000/api/users/profile`, {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    localStorage.setItem(\"users\", JSON.stringify(data));\n    dispatch({\n      type: \"get_userdata_succes\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"get_userdata_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const changeuserData = password => async (dispatch, getState) => {\n  const token = getState().user.user.token;\n  const name = getState().user.user.name;\n  const email = getState().user.user.email;\n\n  try {\n    const {\n      data\n    } = await axios.put(`http://95.216.184.20:9000/api/users/profile`, {\n      name: name,\n      email: email,\n      password: password\n    }, {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    localStorage.setItem(\"users\", JSON.stringify(data));\n    dispatch({\n      type: \"put_changeuserdata_succes\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"put_changeuserdata_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const newOrder = (address, city, postalcode, phone) => async (dispatch, getState) => {\n  const totalPrice = getState().price;\n  const basket = getState().basket;\n  const token = getState().user.user.token;\n\n  try {\n    const {\n      data\n    } = await axios.post(\"http://95.216.184.20:9000/api/orders\", {\n      orderItems: basket,\n      shippingAddress: {\n        address: address,\n        city: city,\n        postalCode: postalcode,\n        phone: phone\n      },\n      paymentMethod: \"cart\",\n      itemsPrice: totalPrice,\n      shippingPrice: \"0.00\",\n      totalPrice: totalPrice\n    }, {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: \"post_neworder_succes\",\n      payload: data\n    });\n    console.log(data);\n  } catch (error) {\n    dispatch({\n      type: \"post_neworder_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const myOrder = () => async (dispatch, getState) => {\n  const token = getState().user.user.token;\n\n  try {\n    const {\n      data\n    } = await axios.get(\"http://95.216.184.20:9000/api/orders/myorders\", {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: \"get_myorder_succes\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"get_myorder_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const eachorderData = params => async (dispatch, getState) => {\n  const token = getState().user.user.token;\n\n  try {\n    const {\n      data\n    } = await axios.get(`http://95.216.184.20:9000/api/orders/${params.id}`, {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: \"get_eachorder_succes\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"get_eachorder_failed\",\n      payload: error.message\n    });\n  }\n};\nexport const basketAction = basket => (dispatch, getState) => {\n  const name = getState().eachproduct.name;\n  const price = getState().eachproduct.price;\n  const countInStock = getState().eachproduct.countInStock - 1;\n  const qty = 1;\n\n  const product = getState().eachproduct._id;\n\n  const image = getState().eachproduct.image;\n  const help = {\n    name,\n    price,\n    countInStock,\n    product,\n    image,\n    qty\n  };\n  dispatch({\n    type: \"basket\",\n    payload: [...basket, help]\n  });\n};\nexport const getNumber = () => (dispatch, getState) => {\n  const x = getState().basket.length;\n  var num = 0;\n\n  for (let i = 0; i < x; i++) {\n    var y = getState().basket[i].qty;\n    num = num + y;\n  }\n\n  ;\n  dispatch({\n    type: \"totalNumber\",\n    payload: num\n  });\n};\nexport const getPrice = () => (dispatch, getState) => {\n  const x = getState().basket.length;\n  var price = 0;\n\n  for (let i = 0; i < x; i++) {\n    var y = getState().basket[i].price;\n    var z = getState().basket[i].qty;\n    price = price + y * z;\n  }\n\n  ;\n  dispatch({\n    type: \"totalprice\",\n    payload: price\n  });\n};\nexport const deleteItem = index => (dispatch, getState) => {\n  const help = getState().basket;\n  help.splice(index, 1);\n  dispatch({\n    type: \"deleteItem\",\n    payload: [...help]\n  });\n};\nexport const plusItem = (basket, index) => (dispatch, getState) => {\n  basket[index].qty = basket[index].qty + 1;\n  dispatch({\n    type: \"plus\",\n    payload: [...basket]\n  });\n};\nexport const minusItem = (basket, index) => (dispatch, getState) => {\n  basket[index].qty = basket[index].qty - 1;\n  dispatch({\n    type: \"minus\",\n    payload: [...basket]\n  });\n};\nexport const availableItem = (basket, index) => (dispatch, getState) => {\n  basket[index].countInStock = getState().eachproduct.countInStock - basket[index].qty + 1;\n  dispatch({\n    type: \"available\",\n    payload: [...basket]\n  });\n};\nexport const addressAction = (address, city, postalcode, phone) => (dispatch, getState) => {\n  dispatch({\n    type: \"address\",\n    payload: {\n      address,\n      city,\n      postalcode,\n      phone\n    }\n  });\n};\nexport const emptyBasket = () => (dispatch, getState) => {\n  dispatch({\n    type: \"emptybasket\",\n    payload: []\n  });\n};\nexport const emptyNumber = () => (dispatch, getState) => {\n  dispatch({\n    type: \"emptyNumber\",\n    payload: 0\n  });\n};","map":{"version":3,"sources":["C:/Users/Mojtaba Salahshoor/Desktop/final project/src/action.js"],"names":["axios","productData","dispatch","getState","data","get","type","payload","error","console","log","message","eachproductData","params","id","newUser","name","email","password","post","localStorage","setItem","JSON","stringify","loginUser","userData","token","user","headers","Authorization","changeuserData","put","newOrder","address","city","postalcode","phone","totalPrice","price","basket","orderItems","shippingAddress","postalCode","paymentMethod","itemsPrice","shippingPrice","myOrder","eachorderData","basketAction","eachproduct","countInStock","qty","product","_id","image","help","getNumber","x","length","num","i","y","getPrice","z","deleteItem","index","splice","plusItem","minusItem","availableItem","addressAction","emptyBasket","emptyNumber"],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\nexport const productData = () => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"http://95.216.184.20:9000/api/products/\"\r\n    );\r\n    // localStorage.setItem(\"products\", JSON.stringify(data));\r\n    dispatch({ type: \"get_product_succes\", payload: [...data] });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch({ type: \"get_product_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const eachproductData = (params) => async (dispatch, getState) => {\r\n  try {\r\n    const {data}  = await axios.get(\r\n      `http://95.216.184.20:9000/api/products/${params.id}`\r\n    );\r\n    dispatch({ type: \"get_eachproduct_succes\", payload: data});\r\n  } \r\n  catch (error) {\r\n    dispatch({ type: \"get_eachproduct_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const newUser =(name,email, password)  => async (dispatch, getState) => {\r\n  try {\r\n    const {data}  =await axios.post(\r\n    \r\n    `http://95.216.184.20:9000/api/users`,{name:name,email:email,password:password}\r\n    )\r\n    localStorage.setItem(\"users\", JSON.stringify(data));\r\n    dispatch({ type: \"post_newuser_succes\", payload: data});\r\n  } \r\n  catch (error) {\r\n    dispatch({ type: \"post_newuser_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const loginUser =(email, password)  => async (dispatch, getState) => {\r\n  try {\r\n    const {data}  =await axios.post(\r\n    \r\n    `http://95.216.184.20:9000/api/users/login`,{email:email,password:password}\r\n    )\r\n    localStorage.setItem(\"users\", JSON.stringify(data));\r\n    dispatch({ type: \"post_loginuser_succes\", payload: data});\r\n  } \r\n  catch (error) {\r\n    dispatch({ type: \"post_loginuser_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const userData =()  => async (dispatch, getState) => {\r\n  const token= getState().user.user.token\r\n   try {\r\n    const {data}  =await axios.get(\r\n       `http://95.216.184.20:9000/api/users/profile`,{\r\n       headers:{\r\n         'Content-Type' :\"application/json\",\r\n         Authorization:`Bearer ${token}`\r\n       }}\r\n    )\r\n    localStorage.setItem(\"users\", JSON.stringify(data));\r\n    dispatch({ type: \"get_userdata_succes\", payload: data});\r\n  } \r\n  catch (error) {\r\n    dispatch({ type: \"get_userdata_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const changeuserData =(password)  => async (dispatch, getState) => {\r\n  const token= getState().user.user.token\r\n  const name= getState().user.user.name\r\n  const email=getState().user.user.email\r\n  try {\r\n    const {data}  =await axios.put(\r\n       `http://95.216.184.20:9000/api/users/profile`,{name:name,email:email,password:password},\r\n       {\r\n       headers:{\r\n         'Content-Type' :\"application/json\",\r\n         Authorization:`Bearer ${token}`\r\n       }}\r\n    )\r\n    localStorage.setItem(\"users\", JSON.stringify(data));\r\n    dispatch({ type: \"put_changeuserdata_succes\", payload: data});\r\n  } \r\n  catch (error) {\r\n    dispatch({ type: \"put_changeuserdata_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const newOrder =(address,city,postalcode,phone)  => async (dispatch, getState) => {\r\nconst totalPrice= getState().price\r\nconst basket= getState().basket\r\nconst token= getState().user.user.token\r\n try {\r\n    const {data}  =await axios.post(\r\n   \"http://95.216.184.20:9000/api/orders\",{orderItems:basket,\r\n    shippingAddress:{address:address,city:city,postalCode:postalcode,phone:phone},\r\n    paymentMethod:\"cart\",\r\n    itemsPrice: totalPrice,\r\n    shippingPrice:\"0.00\",\r\n    totalPrice: totalPrice,\r\n    },\r\n    {headers:{\r\n      'Content-Type' :\"application/json\",\r\n      Authorization:`Bearer ${token}`\r\n    }}\r\n    )\r\n    dispatch({ type: \"post_neworder_succes\", payload: data});\r\n    console.log(data)\r\n  } \r\n  catch (error) {\r\n    dispatch({ type: \"post_neworder_failed\", payload: error.message });\r\n  }\r\n};\r\nexport const myOrder =()  => async (dispatch, getState) => {\r\n  const token= getState().user.user.token\r\n   try {\r\n      const {data}  =await axios.get(\r\n     \"http://95.216.184.20:9000/api/orders/myorders\",\r\n      {headers:{\r\n        'Content-Type' :\"application/json\",\r\n        Authorization:`Bearer ${token}`\r\n      }}\r\n      )\r\n      dispatch({ type: \"get_myorder_succes\", payload: data});\r\n    } \r\n    catch (error) {\r\n      dispatch({ type: \"get_myorder_failed\", payload: error.message });\r\n    }\r\n  };\r\n  export const eachorderData = (params) => async (dispatch, getState) => {\r\n    const token= getState().user.user.token\r\n    try {\r\n      const {data}  = await axios.get(\r\n        `http://95.216.184.20:9000/api/orders/${params.id}`,\r\n        {headers:{\r\n          'Content-Type' :\"application/json\",\r\n          Authorization:`Bearer ${token}`\r\n        }}\r\n      );\r\n      dispatch({ type: \"get_eachorder_succes\", payload: data});\r\n    } \r\n    catch (error) {\r\n      dispatch({ type: \"get_eachorder_failed\", payload: error.message });\r\n    }\r\n  };\r\nexport const basketAction = (basket) => (dispatch, getState) => {\r\n  const name= getState().eachproduct.name\r\n  const price= getState().eachproduct.price\r\n  const countInStock= (getState().eachproduct.countInStock)-1\r\n  const qty = 1\r\n  const product= getState().eachproduct._id\r\n  const image= getState().eachproduct.image\r\n  const help={name,price,countInStock,product,image,qty}\r\n  dispatch({ type: \"basket\", payload: [...basket,help] });\r\n};\r\nexport const getNumber = () => (dispatch, getState) => {\r\n  const x=getState().basket.length\r\n  var num=0;\r\n  for(let i=0;i<x;i++){\r\n  var y = getState().basket[i].qty\r\n  num = num+y\r\n  };\r\n  dispatch({ type: \"totalNumber\", payload: num });\r\n};\r\nexport const getPrice = () => (dispatch, getState) => {\r\n  const x=getState().basket.length\r\n  var price=0;\r\n  for(let i=0;i<x;i++){\r\n  var y = getState().basket[i].price\r\n  var z = getState().basket[i].qty\r\n  price = price+y*z\r\n  };\r\n  dispatch({ type: \"totalprice\", payload: price });\r\n};\r\n\r\nexport const deleteItem = (index) => (dispatch, getState) => {\r\n  const help= getState().basket\r\n  help.splice(index,1)\r\n  dispatch({ type: \"deleteItem\", payload: [...help] });\r\n};\r\nexport const plusItem = (basket,index) => (dispatch, getState) => {\r\n  basket[index].qty=basket[index].qty+1\r\n  dispatch({ type: \"plus\", payload: [...basket] });\r\n};\r\nexport const minusItem = (basket,index) => (dispatch, getState) => {\r\n  basket[index].qty=basket[index].qty-1\r\n  dispatch({ type: \"minus\", payload: [...basket] });\r\n};\r\nexport const availableItem = (basket,index) => (dispatch, getState) => {\r\n  basket[index].countInStock = (getState().eachproduct.countInStock) -(basket[index].qty)+1\r\n  dispatch({ type: \"available\", payload: [...basket] });\r\n};\r\nexport const addressAction = (address,city,postalcode,phone) => (dispatch, getState) => {\r\n  dispatch({ type: \"address\", payload: {address,city,postalcode,phone} });\r\n};\r\nexport const emptyBasket = () => (dispatch, getState) => {\r\n  dispatch({ type: \"emptybasket\", payload: [] });\r\n};\r\nexport const emptyNumber = () => (dispatch, getState) => {\r\n  dispatch({ type: \"emptyNumber\", payload: 0 });\r\n};"]},"metadata":{},"sourceType":"module"}