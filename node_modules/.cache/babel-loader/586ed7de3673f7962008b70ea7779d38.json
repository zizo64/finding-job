{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productReducer, eachproductReducer, basketReducer, userReducer, numberReducer, priceReducer, orderReducer, eachorderReducer } from \"./reducer\";\nconst reducers = combineReducers({\n  product: productReducer,\n  eachproduct: eachproductReducer,\n  basket: basketReducer,\n  user: userReducer,\n  number: numberReducer,\n  price: priceReducer,\n  order: orderReducer,\n  eachorder: eachorderReducer\n});\nconst middleware = [thunk];\nconst localstorageusers = JSON.parse(localStorage.getItem(\"users\")) ? JSON.parse(localStorage.getItem(\"users\")) : {};\nconst localstoragebasket = JSON.parse(localStorage.getItem(\"basket\")) ? JSON.parse(localStorage.getItem(\"basket\")) : [];\nconst localstoragenumber = JSON.parse(localStorage.getItem(\"number\")) ? JSON.parse(localStorage.getItem(\"number\")) : 0;\nconst localstorageprice = JSON.parse(localStorage.getItem(\"price\")) ? JSON.parse(localStorage.getItem(\"price\")) : 0;\nconst initialState = {\n  user: {\n    user: localstorageusers,\n    error: \"\"\n  },\n  basket: localstoragebasket,\n  number: localstoragenumber,\n  price: localstorageprice\n};\nconst store = createStore(reducers, initialState, applyMiddleware(...middleware));\nexport default store;","map":{"version":3,"sources":["C:/Users/Mojtaba Salahshoor/Desktop/final project/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","productReducer","eachproductReducer","basketReducer","userReducer","numberReducer","priceReducer","orderReducer","eachorderReducer","reducers","product","eachproduct","basket","user","number","price","order","eachorder","middleware","localstorageusers","JSON","parse","localStorage","getItem","localstoragebasket","localstoragenumber","localstorageprice","initialState","error","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,kBAAxB,EAA4CC,aAA5C,EAA2DC,WAA3D,EAAuEC,aAAvE,EACEC,YADF,EACeC,YADf,EAC4BC,gBAD5B,QACmD,WADnD;AAEA,MAAMC,QAAQ,GAAGX,eAAe,CAAC;AAC/BY,EAAAA,OAAO,EAAET,cADsB;AAE/BU,EAAAA,WAAW,EAAET,kBAFkB;AAG/BU,EAAAA,MAAM,EAAET,aAHuB;AAI/BU,EAAAA,IAAI,EAAET,WAJyB;AAK/BU,EAAAA,MAAM,EAAET,aALuB;AAM/BU,EAAAA,KAAK,EAAET,YANwB;AAO/BU,EAAAA,KAAK,EAAET,YAPwB;AAQ/BU,EAAAA,SAAS,EAACT;AARqB,CAAD,CAAhC;AAWA,MAAMU,UAAU,GAAG,CAAClB,KAAD,CAAnB;AAEE,MAAMmB,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,IACxBH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADwB,GAExB,EAFF;AAGA,MAAMC,kBAAkB,GAAEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,IACxBH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CADwB,GAExB,EAFF;AAGA,MAAME,kBAAkB,GAAEL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,IACxBH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CADwB,GAExB,CAFF;AAGA,MAAMG,iBAAiB,GAAEN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,IACvBH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADuB,GAEvB,CAFF;AAGF,MAAMI,YAAY,GAAG;AACpBd,EAAAA,IAAI,EAAC;AAAEA,IAAAA,IAAI,EAAEM,iBAAR;AAA4BS,IAAAA,KAAK,EAAE;AAAnC,GADe;AAEpBhB,EAAAA,MAAM,EAAEY,kBAFY;AAGpBV,EAAAA,MAAM,EAAEW,kBAHY;AAIpBV,EAAAA,KAAK,EAAEW;AAJa,CAArB;AAMA,MAAMG,KAAK,GAAGhC,WAAW,CACvBY,QADuB,EAEvBkB,YAFuB,EAGvB5B,eAAe,CAAC,GAAGmB,UAAJ,CAHQ,CAAzB;AAMA,eAAeW,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {productReducer, eachproductReducer, basketReducer ,userReducer,numberReducer,\r\n  priceReducer,orderReducer,eachorderReducer} from \"./reducer\";\r\nconst reducers = combineReducers({\r\n  product: productReducer,\r\n  eachproduct: eachproductReducer,\r\n  basket: basketReducer,\r\n  user: userReducer,\r\n  number: numberReducer,\r\n  price: priceReducer,\r\n  order: orderReducer,\r\n  eachorder:eachorderReducer,\r\n\r\n});\r\nconst middleware = [thunk];\r\n\r\n  const localstorageusers = JSON.parse(localStorage.getItem(\"users\")) \r\n  ? JSON.parse(localStorage.getItem(\"users\"))\r\n  : {}; \r\n  const localstoragebasket =JSON.parse(localStorage.getItem(\"basket\")) \r\n  ? JSON.parse(localStorage.getItem(\"basket\"))\r\n  : []; \r\n  const localstoragenumber =JSON.parse(localStorage.getItem(\"number\")) \r\n  ? JSON.parse(localStorage.getItem(\"number\"))\r\n  : 0; \r\n  const localstorageprice =JSON.parse(localStorage.getItem(\"price\")) \r\n  ? JSON.parse(localStorage.getItem(\"price\"))\r\n  : 0;\r\nconst initialState = {\r\n user:{ user: localstorageusers,  error: \"\" },\r\n basket: localstoragebasket,\r\n number: localstoragenumber,\r\n price: localstorageprice\r\n};\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}